---
# GitLab CI configuration for PANFlow

stages:
  - test
  - build
  - release

variables:
  PYTHON_VERSION: "3.10"

# Test stage - run tests for each commit
test:
  stage: test
  image: python:${PYTHON_VERSION}-slim
  before_script:
    - pip install poetry
    - poetry config virtualenvs.in-project true
    - poetry install
  script:
    - poetry run pytest --cov=panflow
  coverage: '/TOTAL.*\s+(\d+%)$/'
  artifacts:
    reports:
      coverage_report:
        coverage_format: cobertura
        path: coverage.xml

# Lint check
lint:
  stage: test
  image: python:${PYTHON_VERSION}-slim
  before_script:
    - pip install poetry
    - poetry config virtualenvs.in-project true
    - poetry install
  script:
    - poetry run black --check .
    - poetry run isort --check .
    - poetry run flake8 panflow
    - poetry run mypy panflow

# Build stage - build Python packages for each tag
build-packages:
  stage: build
  image: python:${PYTHON_VERSION}-slim
  rules:
    - if: $CI_COMMIT_TAG
  before_script:
    - pip install poetry
  script:
    - poetry build
  artifacts:
    paths:
      - dist/

# Build binaries for each platform
build-linux:
  stage: build
  image: python:${PYTHON_VERSION}-slim
  rules:
    - if: $CI_COMMIT_TAG
  before_script:
    - pip install -r requirements.txt
    - pip install pyinstaller
  script:
    - mkdir -p dist
    - pyinstaller --name=panflow --onefile --clean --noupx 
        --add-data=panflow/xpath_mappings:panflow/xpath_mappings
        --hidden-import=typer
        --hidden-import=rich
        --hidden-import=lxml.etree
        --hidden-import=yaml
        --hidden-import=networkx
        panflow_cli.py
    - mv dist/panflow dist/panflow-linux
    - chmod +x dist/panflow-linux
  artifacts:
    paths:
      - dist/panflow-linux

build-windows:
  stage: build
  image: python:${PYTHON_VERSION}-slim
  rules:
    - if: $CI_COMMIT_TAG
  tags:
    - windows
  before_script:
    - pip install -r requirements.txt
    - pip install pyinstaller
  script:
    - mkdir -p dist
    - python -m PyInstaller --name=panflow --onefile --clean --noupx 
        --add-data=panflow/xpath_mappings;panflow/xpath_mappings
        --hidden-import=typer
        --hidden-import=rich
        --hidden-import=lxml.etree
        --hidden-import=yaml
        --hidden-import=networkx
        panflow_cli.py
    - mv dist/panflow.exe dist/panflow-windows.exe
  artifacts:
    paths:
      - dist/panflow-windows.exe

build-macos:
  stage: build
  rules:
    - if: $CI_COMMIT_TAG
  tags:
    - macos
  before_script:
    - pip3 install -r requirements.txt
    - pip3 install pyinstaller
  script:
    - mkdir -p dist
    - python3 -m PyInstaller --name=panflow --onefile --clean --noupx 
        --add-data=panflow/xpath_mappings:panflow/xpath_mappings
        --hidden-import=typer
        --hidden-import=rich
        --hidden-import=lxml.etree
        --hidden-import=yaml
        --hidden-import=networkx
        panflow_cli.py
    - mv dist/panflow dist/panflow-macos
    - chmod +x dist/panflow-macos
  artifacts:
    paths:
      - dist/panflow-macos

# Release stage - create GitLab Release with binaries
release:
  stage: release
  image: registry.gitlab.com/gitlab-org/release-cli:latest
  rules:
    - if: $CI_COMMIT_TAG
  needs:
    - build-linux
    - build-windows
    - build-macos
    - build-packages
  script:
    - echo "Creating release for $CI_COMMIT_TAG"
  release:
    name: "Release $CI_COMMIT_TAG"
    description: "PANFlow Release $CI_COMMIT_TAG"
    tag_name: $CI_COMMIT_TAG
    assets:
      links:
        - name: panflow-linux
          url: ${CI_PROJECT_URL}/-/jobs/artifacts/${CI_COMMIT_TAG}/raw/dist/panflow-linux?job=build-linux
          link_type: package
        - name: panflow-windows.exe
          url: ${CI_PROJECT_URL}/-/jobs/artifacts/${CI_COMMIT_TAG}/raw/dist/panflow-windows.exe?job=build-windows
          link_type: package
        - name: panflow-macos
          url: ${CI_PROJECT_URL}/-/jobs/artifacts/${CI_COMMIT_TAG}/raw/dist/panflow-macos?job=build-macos
          link_type: package
        - name: panflow-${CI_COMMIT_TAG}.tar.gz
          url: ${CI_PROJECT_URL}/-/jobs/artifacts/${CI_COMMIT_TAG}/raw/dist/panflow-${CI_COMMIT_TAG}.tar.gz?job=build-packages
          link_type: package
        - name: panflow-${CI_COMMIT_TAG}-py3-none-any.whl
          url: ${CI_PROJECT_URL}/-/jobs/artifacts/${CI_COMMIT_TAG}/raw/dist/panflow-${CI_COMMIT_TAG}-py3-none-any.whl?job=build-packages
          link_type: package